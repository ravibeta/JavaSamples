apiVersion: v1
kind: Service
metadata:
  name: logging-service-service
  labels:
    app: logging-service
    app.kubernetes.io/name: logging-service
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    app: logging-service
  ports:
    - name: api
      port: 8080
      servicePort: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logging-service
  labels:
    app: logging-service
    app.kubernetes.io/name: logging-service
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    matchLabels:
      app: logging-service
  serviceName: logging-service-service
  template:
    metadata:
      labels:
        app: logging-service
        app.kubernetes.io/name: logging-service
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      containers:
      - name: logger
        command: ["/bin/sh"]
        args: ["-c", "./gradlew appStart | grep -v WARN  > /dev/termination-log 2>&1"]
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ## name: logger
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SECRET_NAME
            value: logging-service-secret
          - name: SERVICE_NAME
            value: logging-service-service
          - name: PRAVEGA_CONTROLLER_API
            value: "pravega-controller-api.{{ default "k8s-hosted.svc.cluster.local" .Values.global.external.host }}"
        resources: 
          limits:
            cpu: 1000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 2048Mi
        ports:
        - containerPort: 8080
          name: api
          protocol: TCP
        ## readinessProbe:
        ##   httpGet:
        ##     path: /logservice/log
        ##     scheme: HTTPS
        ##     httpHeaders:
        ##     - name: Content-Type
        ##       value: application/json
        ##     port: webhook-server
        volumeMounts:
            - mountPath: /tmp/cert
              name: cert
              readOnly: true
            - name: application-config
              mountPath: /etc/logging-service/
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: logging-service-secret
      - name: application-config
        configMap:
          name: logging-service
---
# note: this empty secret is mounted into the webhook pod,
# and then the webhook updates it with a generated SSL certificate
apiVersion: v1
kind: Secret
metadata:
  name: logging-service-secret
  labels:
    app.kubernetes.io/name: logging-service
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
